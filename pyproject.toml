[tool.poetry]
name = "momento"
version = "0.0.0"

authors = ["Momento <hello@momentohq.com>"]
description = "SDK for Momento"

license = "Apache-2.0"

documentation = "https://docs.momentohq.com/"
homepage = "https://gomomento.com"
readme = "README.md"
repository = "https://github.com/momentohq/client-sdk-python"

keywords = ["Momento", "caching", "key-value store", "serverless"]

classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Operating System :: OS Independent",
  "Framework :: AsyncIO",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Topic :: Internet",
  "Natural Language :: English",
  "Typing :: Typed",
]

exclude = ["src/momento/internal/codegen.py"]

[tool.poetry.dependencies]
python = "^3.7"

momento-wire-types = "^0.96.0"
grpcio = "^1.46.0"
# note if you bump this presigned url test need be updated
pyjwt = "^2.4.0"
# Need a lower bound of 4 to be compatible with python 3.7 flake8
importlib-metadata = { version = ">=4", python = "<3.8" }

[tool.poetry.group.test.dependencies]
pytest = "^7.1.3"
pytest-asyncio = "^0.19.0"
pytest-describe = "^2.0.1"
pytest-sugar = "^0.9.5"

[tool.poetry.group.lint.dependencies]
mypy = "^0.971"
types-setuptools = "^65.3.0"
ruff = "^0.1.6"

[tool.poetry.group.codegen.dependencies]
libcst = "^0.4.9"

[tool.pytest.ini_options]
asyncio_mode = "auto"
log_level = "ERROR"
log_cli = true
log_cli_format = "%(asctime)s [%(levelname)s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S.%f"

[tool.mypy]
python_version = "3.7"

# Increase our expectations
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_expr = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
strict_equality = true

# These are too strict for us at the moment
disallow_any_unimported = false
disallow_subclassing_any = false

[[tool.mypy.overrides]]
module = ["momento_wire_types.*", "grpc.*", "google.*", "pytest_describe"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
  "momento.errors.error_converter",
  "momento.errors.error_details",
  "momento.internal.synchronous._scs_control_client",
  "momento.internal.synchronous._scs_data_client",
  "momento.internal.synchronous._scs_grpc_manager",
  "momento.internal.synchronous._vector_index_control_client",
  "momento.internal.synchronous._vector_index_data_client",
  "momento.internal.synchronous._vector_index_grpc_manager",
  "momento.internal.synchronous._add_header_client_interceptor",
  "momento.internal.synchronous._retry_interceptor",
  "momento.internal.common._data_client_ops",
  "momento.internal.common._data_client_scalar_ops",
  "momento.internal.aio._add_header_client_interceptor",
  "momento.internal.aio._retry_interceptor",
  "momento.internal.aio._scs_control_client",
  "momento.internal.aio._scs_data_client",
  "momento.internal.aio._scs_grpc_manager",
  "momento.internal.aio._vector_index_control_client",
  "momento.internal.aio._vector_index_data_client",
  "momento.internal.aio._vector_index_grpc_manager",
  "momento.internal.aio._utilities",
  "momento.responses.control.signing_key.*",
  "momento.responses.vector_index.data.search",
  "momento.responses.vector_index.data.search_and_fetch_vectors",
  "momento.responses.vector_index.data.utils",
]
disallow_any_expr = false

[[tool.mypy.overrides]]
# this file has mypy incompatibilities between py37 and later versions
module = "momento.internal._utilities._momento_version"
ignore_errors = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_any_expr = false
disallow_any_decorated = false
disallow_untyped_decorators = false


[tool.ruff]
select = [
  "D", # docstring errors
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "I", # isort
  "C", # flake8-comprehensions
  "B", # flake8-bugbear
]
ignore = [
  "B008", # function calls as default arg; collection ttl
  "B024", # abstract class without abstract methods
  "E501", # line too long, handled by black
  "C901", # function too complex
  "D100", # missing docstring in public module
  "D101", # missing docstring in public class
  "D102", # missing docstring in public method
  "D103", # missing docstring in public function
  "D104", # missing docstring in public package
  "D105", # missing docstring in magic method
  "D106", # missing docstring in public nested class
  "D107", # missing docstring in __init__
]
line-length = 120
target-version = "py37"
fix = true

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"src/momento/requests/vector_index/item.py" = ["E721"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
