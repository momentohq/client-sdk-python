name: Manual Release

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.outputs.release }}
    steps:
      - uses: actions/checkout@v2

      - name: Set release
        id: semrel
        uses: go-semantic-release/action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          allow-initial-development-versions: true
          force-bump-patch-version: true

      - name: Output release
        id: release
        run: echo "::set-output name=release::${{ steps.semrel.outputs.version }}"

  publish_python:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: release

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Build package and run tests
        run: |
          pip install tox
          tox -e lint
          tox -e py39

      - name: Prepare to publish
          python -m pip install --upgrade pip
          pip install setuptools wheel twine build

      - name: Configure Artifactory publish credentials
        run: |
          set -e
          set -x
          pushd artifactory_setup
            ./jfrog_setup.sh deploy-user ${{ secrets.PUBLIC_ARTIFACTORY_DEPLOY_USER_MAGIC_PASSTOKEN }} >> ~/.pypirc
          popd
        shell: bash

      - name: Build and publish package
        run: |
          set -e
          set -x
          export MOMENTO_SDK_VERSION="${{needs.release.outputs.version}}"
          if [ -z "$MOMENTO_SDK_VERSION"]
          then
            echo "Unable to determine SDK version!  Exiting!"
            exit 1
          fi
          echo "MOMENTO_SDK_VERSION=${MOMENTO_SDK_VERSION}"
          python -m build
          twine upload -r local dist/* --config-file ~/.pypirc
        shell: bash
