name: On Pull Request

on:
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    env:
      TEST_AUTH_TOKEN: ${{ secrets.ALPHA_TEST_AUTH_TOKEN }}
      TEST_CACHE_NAME: python-integration-test-${{ matrix.python-version }}-${{ github.sha }}

    steps:
      - uses: actions/checkout@v3

      - name: Commitlint and Other Shared Build Steps
        uses: momentohq/standards-and-practices/github-actions/shared-build@gh-actions-v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Bootstrap poetry
        run: |
          curl -sL https://install.python-poetry.org | python - -y --version 1.3.1

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: poetry install

      - name: Run mypy
        # mypy has inconsistencies between 3.7 and the rest; default to lowest common denominator
        if: matrix.python-version == '3.7'
        run: poetry run mypy src/

      - name: Run flake8
        run: poetry run flake8 src/

      - name: Run black
        run: poetry run black src tests --check --diff

      - name: Run isort
        run: poetry run isort . --check --diff

      - name: Run tests
        run: poetry run pytest -p no:sugar -q

  test-examples:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        # TODO: one of the examples dependencies does not support 3.11
        include:
          - python-version: "3.7"
            working-dir: ./examples/prepy310
          - python-version: "3.8"
            working-dir: ./examples/prepy310
          - python-version: "3.9"
            working-dir: ./examples/prepy310
          - python-version: "3.10"
            working-dir: ./examples/py310

    env:
      # TODO: remove token stored as secret in favor of using a
      # momento-local instance that can be spun up for testing
      MOMENTO_AUTH_TOKEN: ${{ secrets.ALPHA_TEST_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Python SDK sample
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Verify README generation
        uses: momentohq/standards-and-practices/github-actions/oss-readme-template@gh-actions-v1
        if: matrix.python-version == '3.10'
        with:
          project_status: official
          project_stability: alpha
          project_type: sdk
          sdk_language: Python
          usage_example_path: ${{ matrix.working-dir }}/example.py

      - name: Bootstrap poetry
        run: |
          curl -sL https://install.python-poetry.org | python - -y --version 1.3.1

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      - name: Install dependencies
        working-directory: ${{ matrix.working-dir }}
        run: poetry install

      - name: Run mypy
        working-directory: ${{ matrix.working-dir }}
        run: poetry run mypy .

      - name: Run flake8
        working-directory: ${{ matrix.working-dir }}
        run: poetry run flake8 .

      - name: Run black
        working-directory: ${{ matrix.working-dir }}
        run: poetry run black . --check --diff

      - name: Run isort
        working-directory: ${{ matrix.working-dir }}
        run: poetry run isort . --check --diff
      
      - name: Run samples for python ${{ matrix.python-version }}
        id: validation
        continue-on-error: true
        working-directory: ${{ matrix.working-dir }}
        run: |
          poetry run python example.py
          poetry run python example_async.py
